package au.csiro.data.recsys.model;

// Generated 09/02/2017 5:17:21 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Dataset generated by hbm2java
 */
@Entity
@Table(name = "dataset", schema = "public", uniqueConstraints = @UniqueConstraint(columnNames = "fedora_id"))
public class Dataset implements java.io.Serializable {

	private long datasetId;
	private Collection collection;
	private String fedoraId;
	private String title;
	private String landingpage;
	private String contributors;
	private String businessunit;
	private String leader;
	private String coltype;
	private Set<Results> resultses = new HashSet<Results>(0);
	private Set<RelatedDataset> relatedDatasets = new HashSet<RelatedDataset>(0);

	public Dataset() {
	}
	
	public Dataset(String fedoraId,String title) {
		this.fedoraId = fedoraId;
		this.title = title;
	}

	public Dataset(long datasetId, String fedoraId, String title, String landingpage, String leader) {
		this.datasetId = datasetId;
		this.fedoraId = fedoraId;
		this.title = title;
		this.landingpage = landingpage;
		this.leader = leader;
	}

	public Dataset(long datasetId, Collection collection, String fedoraId, String title, String landingpage,
			String contributors, String businessunit, String leader, String coltype, Set<Results> resultses,
			Set<RelatedDataset> relatedDatasets) {
		this.datasetId = datasetId;
		this.collection = collection;
		this.fedoraId = fedoraId;
		this.title = title;
		this.landingpage = landingpage;
		this.contributors = contributors;
		this.businessunit = businessunit;
		this.leader = leader;
		this.coltype = coltype;
		this.resultses = resultses;
		this.relatedDatasets = relatedDatasets;
	}

	@Id
	@Column(name = "dataset_id", unique = true, nullable = false)
	public long getDatasetId() {
		return this.datasetId;
	}

	public void setDatasetId(long datasetId) {
		this.datasetId = datasetId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "collection_id")
	public Collection getCollection() {
		return this.collection;
	}

	public void setCollection(Collection collection) {
		this.collection = collection;
	}

	@Column(name = "fedora_id", unique = true, nullable = false)
	public String getFedoraId() {
		return this.fedoraId;
	}

	public void setFedoraId(String fedoraId) {
		this.fedoraId = fedoraId;
	}

	@Column(name = "title", nullable = false)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "landingpage", nullable = false)
	public String getLandingpage() {
		return this.landingpage;
	}

	public void setLandingpage(String landingpage) {
		this.landingpage = landingpage;
	}

	@Column(name = "contributors")
	public String getContributors() {
		return this.contributors;
	}

	public void setContributors(String contributors) {
		this.contributors = contributors;
	}

	@Column(name = "businessunit")
	public String getBusinessunit() {
		return this.businessunit;
	}

	public void setBusinessunit(String businessunit) {
		this.businessunit = businessunit;
	}

	@Column(name = "leader", nullable = false)
	public String getLeader() {
		return this.leader;
	}

	public void setLeader(String leader) {
		this.leader = leader;
	}

	@Column(name = "coltype")
	public String getColtype() {
		return this.coltype;
	}

	public void setColtype(String coltype) {
		this.coltype = coltype;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataset")
	public Set<Results> getResultses() {
		return this.resultses;
	}

	public void setResultses(Set<Results> resultses) {
		this.resultses = resultses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "dataset")
	public Set<RelatedDataset> getRelatedDatasets() {
		return this.relatedDatasets;
	}

	public void setRelatedDatasets(Set<RelatedDataset> relatedDatasets) {
		this.relatedDatasets = relatedDatasets;
	}

}
